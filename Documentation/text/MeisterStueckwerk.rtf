{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
\cocoascreenfonts1{\fonttbl\f0\fnil\fcharset0 Verdana;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Monaco;
\f3\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red63\green110\blue116;\red170\green13\blue145;
\red100\green56\blue32;\red38\green71\blue75;\red28\green0\blue207;\red0\green0\blue0;}
\margl1440\margr1440\margb1800\margt1800
\deftab720
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\pardirnatural\qj

\f0\fs18 \cf0 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec0 Christoph Freidh\'f6fer \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\pardirnatural\qj

\b\fs24 \expnd0\expndtw0\kerning0
Meisterst\'fcck-Vorhaben (Stand Januar 2016):\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\b0\fs18 \expnd0\expndtw0\kerning0
Ich baue gerade einen Schallplattenschneide-Automaten. Es ist ein Kunstprojekt. Dieser Apparat, der Voice-o-graph, ist eine Art Passbild-Automat, nur dass darin nicht das Bild, sondern der Ton analog aufgezeichnet wird. In einer kleinen Kabine hat man die M\'f6glichkeit, 3 min Ton aufzunehmen, der simultan in einen 7inch-Schallplattenrohling geschnitten wird. Nachdem man also einen Gru\'df an einen Menschen in der Ferne, ein Liebesgedicht, seinen Lieblings-Popsong oder vielleicht ein gro\'dfes Geheimnis ins Mikrofon gesprochen oder gesungen hat, erh\'e4lt man es als Vinyl-Schallplatte.\
F\'fcr das Meisterst\'fcck m\'f6chte ich das Kernst\'fcck des Voice-o-graphen pr\'e4sentieren:\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl360\slmult1\pardirnatural

\fs22 \expnd0\expndtw0\kerning0
die Steuerungs-Software des Plattenschneiders.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\fs18 \expnd0\expndtw0\kerning0
Das gesamte Ger\'e4t wird durch einen ARM7-Controller gesteuert, die Steuerungs-Software in C/C++ habe ich komplett selbst entwickelt. Erstellt habe ich es auf einem Apple-Computer mit XCode, den Upload bewerkstellige ich mit der Arduino-Toolchain. \
\
Das Steuerungsprogramm ist ein Scheduler, der Ger\'e4te wie z.B. Stepper-Motoren, Modellbau-Servos, Gleichstrom-Motoren, Elektromagnete etc. starten, stoppen und f\'fchren kann. Diese Software ist in der Programmiersprache C++ geschrieben und nutzt einerseits deren Betriebssystemn\'e4he und Schnelligkeit, andererseits deren M\'f6glichkeit, objektorientiert zu programmieren: sie nutzt das Konzept der Klassen und der Polymorphie. Die Ansteuerung der Ger\'e4te wie z.B. die Erzeugung der Steuerimpulse f\'fcr die Modellbau-Servos oder die Taktung der Schrittmotoren erfolgt ausschlie\'dflich in der Klasse der Ger\'e4te, w\'e4hrend die Koordinierung des Arbeitsablaufes allein die Aufgabe der Schedulerklasse ist. Diese Trennung von Steuerung und Koordinierung bringt erhebliche Vorteile mit sich: der Code wird wesentlich reduzierter, \'fcbersichtlicher und strukturierter, wodurch Programmierfehler vermieden werden k\'f6nnen bzw. schneller auffindbar werden. Der Code ist leicht lesbar und verst\'e4ndlich und an verschiedenste Anforderungen einfach anpassbar. Durch die Anwendung von aussagekr\'e4ftigen Variablennamen wird die klare Struktur zus\'e4tzlich optimiert. Es k\'f6nnen prinzipiell beliebig viele Ger\'e4te gleichzeitig gesteuert und \'fcberwacht und prinzipiell beliebig viele Aufgaben abgearbeitet und untereinander koordiniert werden. Programmiert ist sie wie eine Library, wodurch sie sehr leicht f\'fcr andere Anlagen und Szenarios adaptiert werden kann. \
\page \pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\pardirnatural\qj

\b\fs20 \expnd0\expndtw0\kerning0
Prinzipielle Programmierung\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\b0\fs18 \expnd0\expndtw0\kerning0
\
\pard\tx529\pardeftab720\pardirnatural

\f1\fs8 \expnd0\expndtw0\kerning0
\CocoaLigature0 	
\fs14 \cf2 \expnd0\expndtw0\kerning0
\strokec2 /* create a scheduler object */
\fs8 \cf0 \expnd0\expndtw0\kerning0
\strokec0 \
\pard\tx529\pardeftab720\pardirnatural

\fs14 \expnd0\expndtw0\kerning0
	\cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0  = \cf4 \expnd0\expndtw0\kerning0
\strokec4 new\cf0 \expnd0\expndtw0\kerning0
\strokec0  \cf3 \expnd0\expndtw0\kerning0
\strokec3 CCDeviceScheduler\cf0 \expnd0\expndtw0\kerning0
\strokec0 ;\
\
\
\pard\tx529\pardeftab720\pardirnatural
\cf2 \expnd0\expndtw0\kerning0
\strokec2 	/* add the devices */\
\pard\tx529\pardeftab720\pardirnatural
\cf5 \expnd0\expndtw0\kerning0
\strokec5 	\cf4 \expnd0\expndtw0\kerning0
\strokec4 unsigned\cf5 \expnd0\expndtw0\kerning0
\strokec5  \cf4 \expnd0\expndtw0\kerning0
\strokec4 char\cf5 \expnd0\expndtw0\kerning0
\strokec5  \cf0 \expnd0\expndtw0\kerning0
\strokec0 catStepper =\cf5 \expnd0\expndtw0\kerning0
\strokec5  \cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf5 \expnd0\expndtw0\kerning0
\strokec5 ->\cf6 \expnd0\expndtw0\kerning0
\strokec6 addStepper\cf5 \expnd0\expndtw0\kerning0
\strokec5 (CATSTEPPER_NAME, CATSTEPPER_STEP_PIN, \
\pard\tx529\pardeftab720\pardirnatural\qc
\cf5 \expnd0\expndtw0\kerning0
\strokec5 	CATSTEPPER_DIR_PIN, CATSTEPPER_ENABLE_PIN, CATSTEPPER_HIGHEST_STEPPINGMODE, \
\pard\tx529\pardeftab720\pardirnatural\qr
\cf5 \expnd0\expndtw0\kerning0
\strokec5 	CATSTEPPER_STEPMODECODES, CATSTEPPER_MICROSTEPPINS, CATSTEPPER_STEPS_PER_ROTATION);\
\pard\tx529\pardeftab720\pardirnatural
\cf5 \expnd0\expndtw0\kerning0
\strokec5 \
\pard\tx529\pardeftab720\pardirnatural
\cf4 \expnd0\expndtw0\kerning0
\strokec4 	unsigned\cf0 \expnd0\expndtw0\kerning0
\strokec0  \cf4 \expnd0\expndtw0\kerning0
\strokec4 char\cf0 \expnd0\expndtw0\kerning0
\strokec0  liftServo = \cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf6 \expnd0\expndtw0\kerning0
\strokec6 addServo\cf0 \expnd0\expndtw0\kerning0
\strokec0 (\cf5 \expnd0\expndtw0\kerning0
\strokec5 LIFTSERVO_NAME\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 LIFTSERVO_PIN\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \
\pard\tx529\pardeftab720\pardirnatural\qr
\cf5 \expnd0\expndtw0\kerning0
\strokec5 LIFTSERVO_MIN_POSITION\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 LIFTSERVO_MAX_POSITION\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 LIFTSERVO_PARK_POSITION\cf0 \expnd0\expndtw0\kerning0
\strokec0 );\
\pard\tx529\pardeftab720\pardirnatural
\expnd0\expndtw0\kerning0
	...\
\
\
\pard\tx529\pardeftab720\pardirnatural
\cf2 \expnd0\expndtw0\kerning0
\strokec2 	/* add the tasks */\cf0 \expnd0\expndtw0\kerning0
\strokec0 \
\pard\tx529\pardeftab720\pardirnatural

\fs8 \cf3 \expnd0\expndtw0\kerning0
\strokec3 	
\fs14 \cf4 \expnd0\expndtw0\kerning0
\strokec4 unsigned\cf0 \expnd0\expndtw0\kerning0
\strokec0  \cf4 \expnd0\expndtw0\kerning0
\strokec4 char\cf0 \expnd0\expndtw0\kerning0
\strokec0  lowerHeadForCutting = \cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf3 \expnd0\expndtw0\kerning0
\strokec3 device\cf0 \expnd0\expndtw0\kerning0
\strokec0 [liftServo]->\cf6 \expnd0\expndtw0\kerning0
\strokec6 addTask\cf0 \expnd0\expndtw0\kerning0
\strokec0 (\cf5 \expnd0\expndtw0\kerning0
\strokec5 CUTING_POSITION\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \
\pard\tx529\pardeftab720\pardirnatural\qr
\cf5 \expnd0\expndtw0\kerning0
\strokec5 SPEED_SLOW\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 ACCELERATION_NORMAL\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 DECELERATION_SLOW\cf0 \expnd0\expndtw0\kerning0
\strokec0 );\
\pard\tx529\pardeftab720\pardirnatural
\expnd0\expndtw0\kerning0
\
	\cf4 \expnd0\expndtw0\kerning0
\strokec4 unsigned\cf0 \expnd0\expndtw0\kerning0
\strokec0  \cf4 \expnd0\expndtw0\kerning0
\strokec4 char\cf0 \expnd0\expndtw0\kerning0
\strokec0  driveCatToCuttingStartPosition = \cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf3 \expnd0\expndtw0\kerning0
\strokec3 device\cf0 \expnd0\expndtw0\kerning0
\strokec0 [catStepper]->\cf6 \expnd0\expndtw0\kerning0
\strokec6 addTask\cf0 \expnd0\expndtw0\kerning0
\strokec0 (\
\pard\tx529\pardeftab720\pardirnatural\qr
\cf5 \expnd0\expndtw0\kerning0
\strokec5 CUTTING_START_POSITION\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 SPEED_HIGH\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 ACCELERATION_HIGH\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 DECELERATION_HIGH\cf0 \expnd0\expndtw0\kerning0
\strokec0 );\
\pard\tx529\pardeftab720\pardirnatural
\expnd0\expndtw0\kerning0
\
\
	...\
\
\
\pard\tx529\pardeftab720\pardirnatural
\cf2 \expnd0\expndtw0\kerning0
\strokec2 	/* link the tasks together */\cf0 \expnd0\expndtw0\kerning0
\strokec0 \
	\cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf3 \expnd0\expndtw0\kerning0
\strokec3 device\cf0 \expnd0\expndtw0\kerning0
\strokec0 [catStepper]->\cf3 \expnd0\expndtw0\kerning0
\strokec3 task\cf0 \expnd0\expndtw0\kerning0
\strokec0 [driveCatToCuttingStartPosition]->\cf6 \expnd0\expndtw0\kerning0
\strokec6 startByDate\cf0 \expnd0\expndtw0\kerning0
\strokec0 (\cf7 \expnd0\expndtw0\kerning0
\strokec7 100\cf0 \expnd0\expndtw0\kerning0
\strokec0 );\
	\cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf3 \expnd0\expndtw0\kerning0
\strokec3 device\cf0 \expnd0\expndtw0\kerning0
\strokec0 [liftServo]->\cf3 \expnd0\expndtw0\kerning0
\strokec3 task\cf0 \expnd0\expndtw0\kerning0
\strokec0 [lowerHeadForCutting]->\cf6 \expnd0\expndtw0\kerning0
\strokec6 startAfterCompletionOf\cf0 \expnd0\expndtw0\kerning0
\strokec0 (catStepper, \
\pard\tx529\pardeftab720\pardirnatural\qr
\expnd0\expndtw0\kerning0
driveCatToCuttingStartPosition);\
\pard\tx529\pardeftab720\pardirnatural
\expnd0\expndtw0\kerning0
	\cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf3 \expnd0\expndtw0\kerning0
\strokec3 device\cf0 \expnd0\expndtw0\kerning0
\strokec0 [liftServo]->\cf3 \expnd0\expndtw0\kerning0
\strokec3 task\cf0 \expnd0\expndtw0\kerning0
\strokec0 [lowerHeadForCutting]->\cf6 \expnd0\expndtw0\kerning0
\strokec6 stopDynamicallyBySensor\cf0 \expnd0\expndtw0\kerning0
\strokec0 (\
\pard\tx529\pardeftab720\pardirnatural\qr
\cf5 \expnd0\expndtw0\kerning0
\strokec5 DISTANCE_SENSOR\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 INITIATE_STOP_VALUE\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 TARGET_VALUE\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 ATTENUATION\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 STOP_VERY_PRECISE\cf0 \expnd0\expndtw0\kerning0
\strokec0 );\
\pard\tx529\pardeftab720\pardirnatural
\expnd0\expndtw0\kerning0
	...\
\
\
\pard\tx529\pardeftab720\pardirnatural
\cf2 \expnd0\expndtw0\kerning0
\strokec2 	/* run the tasks */\cf0 \expnd0\expndtw0\kerning0
\strokec0 \
\pard\tx529\pardeftab720\pardirnatural
\cf3 \expnd0\expndtw0\kerning0
\strokec3 	cuttingProcess->\cf6 \expnd0\expndtw0\kerning0
\strokec6 run\cf3 \expnd0\expndtw0\kerning0
\strokec3 ();\
\pard\tx529\pardeftab720\pardirnatural

\fs16 \cf0 \expnd0\expndtw0\kerning0
\strokec0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\f0\fs18 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\page \pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl288\slmult1\pardirnatural\qj

\b\fs20 \expnd0\expndtw0\kerning0
Funktionsweise\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\b0\fs18 \expnd0\expndtw0\kerning0
\
Zentrales Objekt ist der Scheduler, eine Instanz der Klasse mit dem Namen CCDeviceScheduler. Er steuert und koordiniert einen Arbeitsablauf, d.h. verschiedene Ger\'e4te f\'fchren einen Block von Aufgaben aus. Es k\'f6nnen beliebig viele dieser Arbeitsabl\'e4ufe definiert und in beliebiger Reihenfolge abgerufen werden. Zum Beispiel \'84fetchNewRecord\'93, \'84cuttingProcess\'93, \'84ejectRecord\'93 etc.\
\
\pard\tx529\pardeftab720\pardirnatural

\f1\fs14 \expnd0\expndtw0\kerning0
\CocoaLigature0 	\cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0  = \cf4 \expnd0\expndtw0\kerning0
\strokec4 new\cf0 \expnd0\expndtw0\kerning0
\strokec0  \cf3 \expnd0\expndtw0\kerning0
\strokec3 CCDeviceScheduler\cf0 \expnd0\expndtw0\kerning0
\strokec0 ;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\f0\fs18 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\sl288\slmult1\pardirnatural

\f2\fs14 \expnd0\expndtw0\kerning0
	\cf8 \expnd0\expndtw0\kerning0
\strokec8 [Ein neues Scheduler-Objekt mit dem Namen \'84cuttingProcess\'93 wird erzeugt. Es soll die komplette Steuerung des Schneideprozesses \'fcbernehmen.]\cf0 \expnd0\expndtw0\kerning0
\strokec0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\f0\fs18 \expnd0\expndtw0\kerning0
\
\
F\'fcr die Ger\'e4te existiert eine Basisklasse \'84CCDevice\'93 bzw. die eigens entwickelten abgeleiteten Klassen \'84CCServoDevice\'93, \'84CCStepperDevice\'93 \'84CCSwitchingDevice\'93. Als abgeleitete Ger\'e4teklassen haben sie alle das gleiche Interface, verf\'fcgen also alle \'fcber die gleichen Methoden, z.B. \'84prepareMove()\'93, \'84startMove()\'93, \'84drive()\'93, \'84stopMove()\'93 etc. Sie sind insofern alle auf die gleiche Weise zu handhaben, wenngleich die Implementierung dieser Funktionen freilich in jeder abgeleiteten Klasse v\'f6llig unterschiedlich ist. Diese richtet sich nach dem zu steuernden Ger\'e4t und dessen Anforderungen, ob beispielsweise bei der Schrittmotor-Klasse Impulse genau zum richtigen Zeitpunkt oder bei der Servo-Klasse Impulse der exakt richtigen L\'e4nge generiert werden m\'fcssen. \
An die Ger\'e4teklasse der Motoren werden der Endpunkt, die gew\'fcnschte Beschleunigung sowie die gew\'fcnschte Geschwindigkeit \'fcbergeben. Die Ger\'e4teklassen beschleunigen den Motor mit konstanter Beschleunigung vom Stillstand bis zur gew\'fcnschten Geschwindigkeit und bremsen ihn mit konstanter Beschleunigung bis zum Stillstand an der Zielposition ab.\
Wenn notwendig, k\'f6nnten hier weitere abgeleitete Klassen z.B. zur gepulsten Steuerung von Elektromagneten o.\'e4. hinzugef\'fcgt werden. \
\
Der Scheduler enth\'e4lt ein Array dieser Basisklasse \'84CCDevice\'93, in das alle Ger\'e4te eingetragen werden. Es k\'f6nnen beliebig viele Ger\'e4te (Instanzen der abgeleiteten Klassen dieser Klasse) zum Scheduler hinzugef\'fcgt, d.h. in dieses Array eingetragen werden. Dies geschieht durch die Funktionen \'84addServo(...)\'93, \'84addStepper(...)\'93, \'84addSwitch(...)\'93 etc. des Schedulers, in der s\'e4mtliche Parameter dieses Ger\'e4ts \'fcbergeben werden:\
\
\pard\tx529\pardeftab720\pardirnatural

\f1\fs14 \cf4 \expnd0\expndtw0\kerning0
\CocoaLigature0 \strokec4 	unsigned\cf0 \expnd0\expndtw0\kerning0
\strokec0  \cf4 \expnd0\expndtw0\kerning0
\strokec4 char\cf0 \expnd0\expndtw0\kerning0
\strokec0  liftServo = \cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf6 \expnd0\expndtw0\kerning0
\strokec6 addServo\cf0 \expnd0\expndtw0\kerning0
\strokec0 (\cf5 \expnd0\expndtw0\kerning0
\strokec5 LIFTSERVO_NAME\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 LIFTSERVO_PIN\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \
\pard\tx529\pardeftab720\pardirnatural\qr
\cf5 \expnd0\expndtw0\kerning0
\strokec5 LIFTSERVO_MIN_POSITION\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 LIFTSERVO_MAX_POSITION\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 LIFTSERVO_PARK_POSITION\cf0 \expnd0\expndtw0\kerning0
\strokec0 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\f0\fs18 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\sl288\slmult1\pardirnatural

\f2\fs14 \expnd0\expndtw0\kerning0
	[Ein neues Device-Objekt vom Typ Modellbauservo wird dem Device-Array des Schedulers hinzugef\'fcgt. Das Device-Array des Schedulers hei\'dft \'84device\'93. \'dcbergeben wird ein Name, mit dem dieses Servo im Ablaufprotokoll erscheint, der Pin, mit dem es gesteuert wird, ein minimaler und ein maximaler Positionswert und die Parkposition.]\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\f0\fs18 \expnd0\expndtw0\kerning0
\
\
R\'fcckgabewert dieser Funktion ist der Index dieses Ger\'e4tes im Ger\'e4te-Array (\'84device[]\'93) des Schedulers. Mit diesem Ger\'e4teindex ist das Ger\'e4t dann eindeutig identifizierbar. Wird dieser Wert in einer aussagekr\'e4ftigen Variable gespeichert, ist es sehr einfach, dieses Ger\'e4t anzusprechen: \
\
\pard\tx529\pardeftab720\pardirnatural

\fs16 \expnd0\expndtw0\kerning0
\CocoaLigature0 	
\f1\fs14 \cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf3 \expnd0\expndtw0\kerning0
\strokec3 device\cf0 \expnd0\expndtw0\kerning0
\strokec0 [liftServo]...
\f0\fs18 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj
\expnd0\expndtw0\kerning0
\
\
Zu diesen Ger\'e4ten des Schedulers k\'f6nnen nun beliebig viele Aufgaben hinzugef\'fcgt werden. Die Klasse \'84CCDevice\'93 enth\'e4lt ein Aufgaben-Array mit dem Namen \'84task[]\'93. Die Eintragung von Aufgaben in dieses Array bewerkstelligt die Funktion addTask(...) des jeweiligen Ger\'e4tes: \'dcbergeben werden s\'e4mtliche Parameter dieser Aufgabe:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\sl360\slmult1\pardirnatural

\fs22 \expnd0\expndtw0\kerning0
\
\pard\tx529\pardeftab720\pardirnatural

\f1\fs8 \cf3 \expnd0\expndtw0\kerning0
\CocoaLigature0 \strokec3 	
\fs14 \cf4 \expnd0\expndtw0\kerning0
\strokec4 unsigned\cf0 \expnd0\expndtw0\kerning0
\strokec0  \cf4 \expnd0\expndtw0\kerning0
\strokec4 char\cf0 \expnd0\expndtw0\kerning0
\strokec0  lowerHeadForCutting = \cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf3 \expnd0\expndtw0\kerning0
\strokec3 device\cf0 \expnd0\expndtw0\kerning0
\strokec0 [liftServo]->\cf6 \expnd0\expndtw0\kerning0
\strokec6 addTask\cf0 \expnd0\expndtw0\kerning0
\strokec0 (\cf5 \expnd0\expndtw0\kerning0
\strokec5 CUTING_POSITION\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \
\pard\tx529\pardeftab720\pardirnatural\qr
\cf5 \expnd0\expndtw0\kerning0
\strokec5 SPEED_SLOW\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 ACCELERATION_NORMAL\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 DECELERATION_SLOW\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 NO_DELAY\cf0 \expnd0\expndtw0\kerning0
\strokec0 );\
\pard\tx529\pardeftab720\pardirnatural

\fs16 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\sl288\slmult1\pardirnatural

\f2\fs14 \expnd0\expndtw0\kerning0
\CocoaLigature1 [Dem Ger\'e4t "liftServo" wird eine neue Aufgabe hinzugef\'fcgt: Fahre zur Position "CUTTING_POSITION" mit der Geschwindigkeit "SPEED_SLOW", der Beschleunigung "ACCELERATION_NORMAL" bzw. "DECELERATION_SLOW". Die Aufgabe startet ohne Startverz\'f6gerung. Sein Index wird in der Variable \'84lowerHeadForCutting\'93 abgelegt.]\
\pard\tx529\pardeftab720\pardirnatural

\f1\fs16 \expnd0\expndtw0\kerning0
\CocoaLigature0 \
\pard\tx529\pardeftab720\pardirnatural

\f0\fs22 \cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 \strokec8 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\fs18 \cf0 \expnd0\expndtw0\kerning0
\strokec0 R\'fcckgabewert dieser Funktion ist wiederum der Index dieser Aufgabe im Aufgaben-Array, mit dem diese Aufgabe eindeutig identifiziert ist. Dieser Wert wird wiederum in einer aussagekr\'e4ftigen Variable gespeichert, damit sie sp\'e4ter leicht angesprochen werden kann.\
\
Gestartet, gestoppt und manipuliert werden k\'f6nnen die Ger\'e4te durch Zeitablauf, durch die Zustands\'e4nderung angeschlossener Sensoren, durch das Erreichen eines Zustandes bzw. einer Position dieses Ger\'e4tes sowie durch das Erreichen eines Zustandes bzw. einer Position jedes anderen Ger\'e4tes. Entsprechend lauten die Methoden der Aufgaben (\'84task[]\'93): startByDate(...), startByButton(...), startAfterMy(...), startAfterCompletionOf(...), startByTriggerpositionOf(...), switchToNextTaskByDate(...), switchToNextTaskByButton(...), switchToNextTaskAfterCompletionOf(...), switchToNextTaskByTriggerpositionOf(...), stopByTimeout(...), stopByButton(...), stopAfterCompletionOf(...), stopByTriggerpositionOf(...), stopDynamicallyBySensor(...);\
\
\pard\tx529\pardeftab720\pardirnatural

\f1\fs14 \expnd0\expndtw0\kerning0
\CocoaLigature0 	\cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf3 \expnd0\expndtw0\kerning0
\strokec3 device\cf0 \expnd0\expndtw0\kerning0
\strokec0 [catStepper]->\cf3 \expnd0\expndtw0\kerning0
\strokec3 task\cf0 \expnd0\expndtw0\kerning0
\strokec0 [driveCatToCuttingStartPosition]->\cf6 \expnd0\expndtw0\kerning0
\strokec6 startByDate\cf0 \expnd0\expndtw0\kerning0
\strokec0 (\cf7 \expnd0\expndtw0\kerning0
\strokec7 100\cf0 \expnd0\expndtw0\kerning0
\strokec0 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\sl288\slmult1\pardirnatural

\f2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
[Die Aufgabe "
\f1 \expnd0\expndtw0\kerning0
\CocoaLigature0 driveCatToCuttingStartPosition
\f2 \expnd0\expndtw0\kerning0
\CocoaLigature1 " soll 100 ms nachdem der Scheduler (\'84cuttingProcess\'93) gestartet wurde, ausgef\'fchrt werden.]\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\sl288\slmult1\pardirnatural

\fs16 \expnd0\expndtw0\kerning0
\
\pard\tx529\pardeftab720\pardirnatural

\f1\fs14 \expnd0\expndtw0\kerning0
\CocoaLigature0 	\cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf3 \expnd0\expndtw0\kerning0
\strokec3 device\cf0 \expnd0\expndtw0\kerning0
\strokec0 [liftServo]->\cf3 \expnd0\expndtw0\kerning0
\strokec3 task\cf0 \expnd0\expndtw0\kerning0
\strokec0 [lowerHeadForCutting]->\cf6 \expnd0\expndtw0\kerning0
\strokec6 startAfterCompletionOf\cf0 \expnd0\expndtw0\kerning0
\strokec0 (catStepper, \
\pard\tx529\pardeftab720\pardirnatural\qr
\expnd0\expndtw0\kerning0
driveCatToCuttingStartPosition);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\sl288\slmult1\pardirnatural

\f2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
[Die Aufgabe "lowerHeadForCutting" wird gestartet, nachdem die Aufgabe "driveCatToCuttingStart" des Schneideschlittenantriebs abgeschlossen ist.]\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\sl288\slmult1\pardirnatural

\fs16 \expnd0\expndtw0\kerning0
\
\pard\tx529\pardeftab720\pardirnatural

\f1\fs14 \expnd0\expndtw0\kerning0
\CocoaLigature0 	\cf3 \expnd0\expndtw0\kerning0
\strokec3 cuttingProcess\cf0 \expnd0\expndtw0\kerning0
\strokec0 ->\cf3 \expnd0\expndtw0\kerning0
\strokec3 device\cf0 \expnd0\expndtw0\kerning0
\strokec0 [liftServo]->\cf3 \expnd0\expndtw0\kerning0
\strokec3 task\cf0 \expnd0\expndtw0\kerning0
\strokec0 [lowerHeadForCutting]->\cf6 \expnd0\expndtw0\kerning0
\strokec6 stopDynamicallyBySensor\cf0 \expnd0\expndtw0\kerning0
\strokec0 (\
\pard\tx529\pardeftab720\pardirnatural\qr
\cf5 \expnd0\expndtw0\kerning0
\strokec5 DISTANCE_SENSOR\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 INITIATE_STOP_VALUE\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 TARGET_VALUE\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 ATTENUATION\cf0 \expnd0\expndtw0\kerning0
\strokec0 , \cf5 \expnd0\expndtw0\kerning0
\strokec5 STOP_VERY_PRECISE\cf0 \expnd0\expndtw0\kerning0
\strokec0 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\sl288\slmult1\pardirnatural

\f2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
[Die Aufgabe "lowerHeadForCutting" wird entsprechend der Sensorwerte des Distanzsensors im Schneidekopf dynamisch gestoppt.]\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\f0\fs18 \expnd0\expndtw0\kerning0
Nachdem die Parameter aller Aufgaben definiert sind, kann der Prozess gestartet werden. Jetzt startet, koordiniert und beendet der Scheduler alle Aufgaben entsprechend der Eingabe.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\sl288\slmult1\pardirnatural

\f2\fs14 \expnd0\expndtw0\kerning0
\
\pard\tx529\pardeftab720\pardirnatural

\f1 \cf3 \expnd0\expndtw0\kerning0
\CocoaLigature0 \strokec3 	cuttingProcess->\cf6 \expnd0\expndtw0\kerning0
\strokec6 run\cf3 \expnd0\expndtw0\kerning0
\strokec3 ();\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f3\fs24 \cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 \strokec8 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\fi360\sl288\slmult1\pardirnatural\qj

\f0\fs18 \cf0 \expnd0\expndtw0\kerning0
\strokec0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f3\fs24 \cf0 \kerning1\expnd0\expndtw0 \up0 \nosupersub \ulnone \outl0\strokewidth0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\qr

\f0\fs18 \cf8 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec8 1}